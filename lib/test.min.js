define("Setup",["underscore"],function(t){return function(e){return t.isFunction(e)?e():e}}),define("Assertion",["underscore","bIsObjectEqual"],function(t,e){return function(n){return t.has(n,"ComparisonFunction")?n.ComparisonFunction(n):t.has(n,"Comparator")&&t.has(n.Comparator,"Object")&&!0===n.Comparator.Object?e({Comparator:n.Result,Comparand:n.ExpectedOutput}):n.ExceptionTest?e({Comparator:n.Result,Comparand:n.ExpectedOutput}):n.Result===n.ExpectedOutput}}),define("Debug",["log","underscore"],function(t,e){return function(n){!0===n.Debug&&(e.has(n,"Comparator")&&e.has(n.Comparator,"Object")&&!0===n.Comparator.Object?(t("Result: "+JSON.stringify(n.Result)),t("Expected: "+JSON.stringify(n.ExpectedOutput))):(t("Result: "+n.Result),t("Expected: "+n.ExpectedOutput)))}}),define("Action",["log"],function(t){return function(e){try{e.Result=e.Function(e.Input)}catch(n){if(!e.ExceptionTest)throw t(JSON.stringify(n)),{Message:"UnexpectedError"};e.Comparator={Object:!0},e.Result=n}finally{return e.Result}}}),define("Test",["Setup","Assertion","Debug","log","Action"],function(t,e,n,u,r){return function(u){return{Name:u.Name,Run:function(){return u.Input=t(u.Input),u.Result=r(u),n(u),e(u)}}}});